# Configuración de la base de datos MySQL
# spring.datasource.url=jdbc:mysql://localhost:3306/apiRest
# spring.datasource.username=root
# spring.datasource.password=root

# Configuración de Hibernate
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.open-in-view=false

# Configuración de logging SQL
# logging.level.org.hibernate.SQL=DEBUG

# Configuración de la base de datos H2
# Habilitar la consola de H2
spring.h2.console.enabled=true
# Parámetros para conectarnos a una base de datos
spring.datasource.url=jdbc:h2:mem:./betodb;
spring.h2.console.settings.web-allow-others=true
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=root
spring.datasource.password=root

# Configuración de JPA
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# El update le dice que si no existen las tablas que las cree y luego actualice
spring.jpa.hibernate.ddl-auto=update
# Muestra por la consola como se desarrollan las consultas SQL
spring.jpa.show-sql = false

# Puerto de ejecución, donde escucha el server embebido
# server.port=8080

# OPEN API
# http://localhost:8080/swagger-ui/index.html
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# LEVANTAR H2
# http://localhost:8080/h2-console/